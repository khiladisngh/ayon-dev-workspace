# This file is the single source of truth for your Python project's
# metadata, dependencies, and tool configurations.

[project]
name = "ayon-dev-workspace"
version = "0.1.0"
description = "A modern development environment for Ayon and related DCC tools."
requires-python = ">=3.9, <3.10"                                                 # Align with Ayon's requirement

# Core runtime dependencies required for Ayon client/addon development.
dependencies = [
    "click>=8.0",
    "requests>=2.25",
    "pymongo>=4.0",
    "Qt.py",
    "PySide6",         # Or another Qt binding like PyQt6
    "websockets",
    "ayon-python-api",
    # Add the ayon-python-api or other core packages if they are on PyPI
    # or install them from a git repository.
]

[project.urls]
Homepage = "https://github.com/your-username/your-ayon-project"
Repository = "https://github.com/your-username/your-ayon-project"

# Optional dependencies, grouped for different purposes (e.g., 'dev').
# These are installed by `uv pip sync --all-extras`.
[project.optional-dependencies]
dev = [
    # --- Testing ---
    "pytest",
    "pytest-cov",

    # --- Code Quality & Automation ---
    "ruff",       # The all-in-one linter and formatter
    "mypy",       # Static type checker
    "pre-commit", # For managing git hooks

    # --- Developer Experience ---
    "debugpy",        # The standard debugger for Python in VS Code
    "ipython",        # A powerful interactive Python shell
    "types-requests", # Type hints for the 'requests' library
]

# -------------------------------------------------------------------
# TOOL CONFIGURATIONS
# -------------------------------------------------------------------

[tool.ruff]
# See all rules: https://docs.astral.sh/ruff/rules/
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # Line too long (handled by the formatter)
]
# Exclude directories and files from linting 
exclude = [".venv", "build", "dist", "__pycache__"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["ayon_core"] # Add your project's top-level packages here

[tool.mypy]
# See all options: https://mypy.readthedocs.io/en/stable/config_file.html
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true                   # Recommended for large projects to start
show_error_codes = true
exclude = ["\\.venv/.*", "build/.*", "dist/.*"]

# Example of ignoring errors for a specific library that lacks type hints
# [[tool.mypy.overrides]]
# module = "some_untyped_library.*"
# ignore_missing_imports = true
